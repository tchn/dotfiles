set_default() {
    # set -o errexit
    set -o nounset
    # set -o pipefail
}

if_exists() {
    local fname="$1"
    set_default
    if [ -e "$fname" ]; then
        return 0
    else
        return 1
    fi
}

asroot() {
    set_default
    local retval=0
    sudo -n echo -n '' >/dev/null 2>&1 || retval=1
   return "$retval"
}

mksynergyconf() {
    set_default
    local leftscr=$1
    local rightscr=$2

    cat > ~/.synergy.conf << EOF
section: screens
    $leftscr:
    $rightscr:
end

section: links
    $leftscr:
       right = $rightscr
    $rightscr:
       left = $leftscr
end

section: options
    keystroke(alt+shift+\u0031) = switchToScreen($leftscr)
    keystroke(alt+shift+\u0032) = switchToScreen($rightscr)
    screenSaverSync = true
end

EOF
}

synergys_start() {
    set_default
    # conf="$1"
    synergys -f --config "${1:-${HOME}/.synergy.conf}"
}

synergyc_connect() {
    set_default
    local srv="$1"
    ssh -p "${2:-22}" -f -N -L 24800:"$1":24800 "$1"
    synergyc -f localhost
}

hex() {
    set_default
    if_exists $(which hexdump) && hexdump -v -e '/1 "%02x"' $1
}

h2b() {
    set_default
    if_exists $(which xxd) && xxd -r -p $1
}

dups() {
    set_default
    sort "$@" | uniq -d
}

printp() {
    set_default
    ps -eo pgid,pid,ppid,user,args --sort user "$@"
}

psgrep() {
    set_default;
    ps auxf | grep -v "grep" | grep -i "$@";
}

seqhex() {
    set_default;
    local i start end
    start=$((0x$1));
    end=$((0x$2));

    for i in $(seq "$start" "$end"); do
        printf "%x\n" "$i";
    done;
}

rep() {
    set_default
    printf "%0$2d" | sed -e "s/0/$1/g";
}

fname() {
    set_default;
    find . -mindepth 1 -iname "$@";
}

whichsh(){
    local cur_sh;
    cur_sh=$(ps -o command $$ | tail -n1);
    case "$cur_sh" in
        "sh" ) return 1;;
           * ) return 0;;
    esac
}

smbmount-osx() {
    set_default;
    sudo mount -t cifs "$1" "$2" -o user="$3",nounix,sec=ntlmssp;
}

man() {
    env \
        LESS_TERMCAP_mb=$(printf "\e[1;31m") \
        LESS_TERMCAP_md=$(printf "\e[1;31m") \
        LESS_TERMCAP_me=$(printf "\e[0m") \
        LESS_TERMCAP_se=$(printf "\e[0m") \
        LESS_TERMCAP_so=$(printf "\e[1;44;33m") \
        LESS_TERMCAP_ue=$(printf "\e[0m") \
        LESS_TERMCAP_us=$(printf "\e[1;32m") \
        man "$@";
}
